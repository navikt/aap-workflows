# A reusable workflow for pull-requests on gradle JVM projects.
# Auto merges dependabot pull-requests
#
# Prerequisites:
# - Minimum 1 junit test
# - dependabot.yml with open-pull-requests-limit: 1
#
# Recomendations:
# Require `test` job (dorny/test-reporter) in a branch protection rule to main.

name: Pull Request

on: 
  workflow_call:
    inputs:
      jdk:
        required: false
        type: string
        description: jdk version, e.g. 21
        default: 21
      debug:
        required: false
        type: boolean
        description: turn on debug logs
        default: false

jobs:
  build:
    permissions:
      checks: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4.7.0
        with:
          java-version: ${{ inputs.jdk }}
          distribution: 'temurin'

      - uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper
        env:
          # Reports all cache entries saved/restored.
          # Some parallell cache operations will be disabled when debug is enabled
          GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: ${{ inputs.debug }}

      - run: ./gradlew test --continue
        env:
          GITHUB_PASSWORD: ${{ secrets.READER_TOKEN }}

      - uses: dorny/test-reporter@v2.1.0
        if: success() || failure()
        with:
          name: test
          path: "**/build/test-results/test/TEST-*.xml"
          reporter: java-junit
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Store reports
        if: failure()
        uses: actions/upload-artifact@v4.4.0
        with:
          name: reports
          path: |
            **/build/reports/
            **/build/test-results/

  merge:
    if: ${{ github.actor == 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      pull-requests: write
    steps:
      - run: gh pr merge --auto --rebase "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
