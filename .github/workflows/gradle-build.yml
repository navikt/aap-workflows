name: Gradle

on:
  workflow_call:
    inputs:
      jdk:
        required: false
        type: string
        description: jdk version, e.g. 21
        default: 21
      debug:
        required: false
        type: boolean
        description: turn on debug logs
        default: false
      publish-typescript:
        required: false
        type: boolean
        description: publish typescript artifacts
        default: false
      typescript-enums:
        required: false
        type: boolean
        description: if publish typescript is true. use flag for enums
        default: false
      app-navn:
        required: false
        type: string
        description: app-navn
        default: ""
      openapi-test-navn:
        required: false
        type: string
        description: openapi-test-navn
        default: "*ApiTest*.*openapi*"
      generate-openapi-command:
        required: false
        type: string
        description: Gradle command to generate openapi.json
        default: ""

jobs:
  build:
    permissions:
      contents: write # sumbit dependency-graph
      id-token: write # nais/docker-build-push
      checks: write # dorny
      actions: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4.7.0
        with:
          java-version: ${{ inputs.jdk }}
          distribution: "temurin"

      - uses: gradle/actions/setup-gradle@v4
        with:
          # Generate and submit a dependency graph (transitive dependencies)
          dependency-graph: generate-and-submit
          gradle-version: wrapper
        env:
          # Reports all cache entries saved/restored.
          # Some parallell cache operations will be disabled when debug is enabled
          GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: ${{ inputs.debug }}

      - run: ./gradlew test app:buildFatJar --continue
        env:
          GITHUB_PASSWORD: ${{ secrets.READER_TOKEN }}
      - if: ${{ inputs.publish-typescript == true && inputs.generate-openapi-command == '' }}
        run: ./gradlew :app:cleanTest :app:test --tests '${{ inputs.openapi-test-navn }}' --continue --configuration-cache --stacktrace --info --no-build-cache
        env:
          GITHUB_PASSWORD: ${{ secrets.READER_TOKEN }}
      - if: ${{ inputs.publish-typescript == true && inputs.generate-openapi-command != '' }}
        run: '${{ inputs.generate-openapi-command }}'
        env:
          GITHUB_PASSWORD: ${{ secrets.READER_TOKEN }}
      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        if: ${{ inputs.publish-typescript == true }}
        with:
          name: openapi
          path: ./openapi.json
          overwrite: "true"
      - uses: navikt/github-app-token-generator@v1
        id: get-token
        if: ${{ inputs.publish-typescript == true }}
        with:
          app-id: "${{ secrets.TEAM_AAP_GITHUB_APP_ID }}"
          private-key: "${{ secrets.TEAM_AAP_GITHUB_APP_PRIVATE_KEY }}"
          repo: navikt/aap-backend-typescript-types
      - uses: actions/github-script@v7
        if: ${{ inputs.publish-typescript == true }}
        with:
          github-token: ${{ steps.get-token.outputs.token }}
          script: |
            const fs = require('fs');
            await github.rest.actions.createWorkflowDispatch({
                owner: 'navikt',
                repo: 'aap-backend-typescript-types',
                workflow_id: 'publish-and-release.yml',
                ref: 'main',
                inputs: {
                    'artifactId': '${{steps.artifact-upload-step.outputs.artifact-id}}',
                    'appNavn': '${{ inputs.app-navn }}',
                    'with-enums': ${{ inputs.typescript-enums }}
                }
              })
      - uses: dorny/test-reporter@v2.0.0
        if: success() || failure()
        with:
          name: test
          path: "**/build/test-results/test/TEST-*.xml"
          reporter: java-junit
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Store reports
        if: failure()
        uses: actions/upload-artifact@v4.4.0
        with:
          name: reports
          path: |
            **/build/reports/
            **/build/test-results/

      - uses: nais/docker-build-push@v0
        env: # Workaround for rate limiting inntil denne er fikset: https://github.com/aquasecurity/trivy-action/issues/389
          TRIVY_JAVA_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-java-db:1"
        with:
          team: aap
          tag: ${{ github.sha }}
          build_args: |
            APP_NAME=${{ github.event.repository.name }}
